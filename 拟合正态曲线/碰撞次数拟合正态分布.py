# -*- coding: utf-8 -*-

import numpy as np
import matplotlib.pyplot as plt
# from scipy.optimize import curve_fit
# import math
# import matplotlib.mlab as mlab
from scipy.stats import norm

# 心态词典
dic = {
    '喜悦': ['历史性时刻', '亲眼见证', '贺喜', 'China', '安全', '妙', '喜极而泣', '棒', '好', 'good', '牛', '平安', '笑', '没事',
           '微笑', '哈哈哈', '激动', '好极了', '好耶', '安心', '舒畅', '欢喜', '在家', '爱', '赚', 'OK', '喜', '转危为安', '舒服'],

    '赞扬': ['加油', '好', '赞', '感动', '暖', '棒', '致敬', '感谢', '福报', '暖心', '支持', '信心', '满意', '白衣天使', '挺住', '放心',
           '赞成', '上正轨', '帅', '缓解', '改善', '愿', '浴火重生', '不抛弃', '不放弃', '中国人民', '春暖花开', '指日可待', '辛苦',
           '降了', '撑住', '救', '优秀', '顶的住', '早日康复', '必胜', '一定赢', '稳住', '高尚', '好好的生活', '拭目以待', '太好了',
           '期待', '拥护', '大快人心', '无私', '奉献', '封神', '共和国勋章', '肯定', '神人', '中国之光', '666', '记入历史', '载入历史',
           '强', '厉害', '我辈楷模', '伟大', '最美', '济世', '功臣', '国士无双', '泪目', '动容', '热泪盈眶', '功在当代', '办好', '共享',
           '全民', '信赖', '保驾护航', '亲自', '不要命'],

    '希望': ['疫苗上市', '加油', '愿', '挺住', '祝', '武汉', '热干面', '希望', '相信', '建议', '支持', '防护', '做好', '回家', '控制',
           '辟谣', '国泰民安', '不慌', 'hold住', '胜利', '天佑', '振作', '挺过难关', '团结', '共渡难关', '共同', '考验', '地摊',
           '钱', '奋斗', '努力', '办理', '别急', '出院者', '值得', '人人有责', '严厉打击', '一切正常'],

    '悲哀': ['节哀', '别去打扰', '心痛欲碎', '算是人', '逝者安息', '泪目', '哀', '忍不住', '眼泪', '告慰英灵', '冤', '安息',
           '痛', '不幸', '难过', '惋惜', '愤懑', '默哀', '哀悼', '非典', '病毒', '哭', '不要', '死', '大哭', '疫情', '可怕',
           '不好', '害怕', '不行', '严重', '牺牲', '失望', '苦', '难', '不想', '问题', '难受', '推迟', '出事', '停产', '伤害', '乌云',
           '中毒'],

    '愤怒': ['！！！', '吗？', '呢？', '该死', '干嘛吃的', '不管不问', '在干嘛', '踏马的', '滚', '骂', '在干什么', '毫不作为',
           '生气', '不平', '失望', '算了', '喷死', '什么', '过分', '干嘛', '操', '烦', '死了', '不能理解', '脑残', '无作为',
           '查', '黑心', '不顾', '追责', '不要', '惩', '忽悠', '斩立决', '毙', '憎恶', '咒', 'nt', '啥呢', '根本没有', '隐瞒',
           '去哪了', '谢罪', '辞职', '革职', '狡猾', '笑死', '算账', '下台', '罪人', '恶', '傻', '残', '马', 'md', '他妈', '心酸',
           '杀', '无能', '丢人', '无语', '屎', '不爽', '卧槽', '放屁', '拖后腿', '居心叵测', '祸心', '气死', '奴才', '垃圾',
           '扰乱', '无脑', '坏事', '舔狗', '矛盾', '怼', '尴尬', '无耻', '阴险', '渎职', '小人', '孙子', '呸', '打倒', '口吐芬芳',
           '踩', '狗', '劳资', '甩锅', '良知', '皮球', '腐败', '唉', '不敢担当', '乌纱帽', '祸害', '驴粪蛋子', '自欺欺人', '烂',
           '作妖', '乱', '瞎扯', '憨批', 'tm', '呵呵', '爪巴', '不要脸', '屁', '差评', '不负责任', '节奏', '特么', '洗白', '扯淡',
           '玩意儿', '难以服众', '道歉', '爬', 'nm', '发怒', '冒火', '正名', 'tui', '假惺惺', '假大空', '阴阳怪气', '虚伪', '蝙蝠',
           '病毒进入', '乱吃', '真的服', '谣言', '造谣', '野味', '美国', '甩', '傻子', '人云亦云', '事实真相', '乱划', '不实', '不作为',
           '阴谋论', '阴暗', '都能杠', '睁眼瞎', '疯狂', '没脑子'],

    '恐惧': ['紧张', '绝望', '害怕', '紧缺', '马上', '迷', '困难', '死', '可怜', '惨', '怕', '谣', '告急', '不敢', '不能', '吓', '祸害',
           '警惕', '空了', '求助', '帮忙', '凶', '危', '什么情况', '毒', '呜', '人心惶惶', '崩溃', '小心', '内忧外患', '着急', '慌',
           '尸体', '假的', '隔离', '匮乏', '骗', '据说', '感染', '疯了', '不可能', '扯淡', '谎报', '真的假的', '乱七八糟', '真真假假',
           '哭了', '唉', '举报', '不容乐观', '不太行', '心急如焚', '吓傻', '混乱', '越来越多', '当心', '呛', '人祸', '累', '压力', '疲惫',
           '口罩', '无语', '捂脸', '传播', '滑稽', '囧', '头皮发麻', '恐慌', '疾病', '瑟瑟发抖', '？？？', '抢', '不能回家', '空荡荡',
           '服了', '传染', '扩散', '全球', '为什么', '不够', '典型过程', '云里雾里', '事态严重', '世界末日', '一无所知', '高烧', '灾难']
}


# 计算碰撞
def crash(key, frequency, list):
    while frequency != 0:
        if key == '喜悦':
            list.append(1)
        if key == '赞扬':
            list.append(2)
        if key == '希望':
            list.append(3)
        if key == '悲哀':
            list.append(4)
        if key == '愤怒':
            list.append(5)
        if key == '恐惧':
            list.append(6)
        frequency = frequency - 1


# 用1，2，3，4，5，6分别表示我们在心态词典中创建的6个心态词
# 其中1代表喜悦，2代表赞扬，3代表希望，4代表悲哀，5代表愤怒，6代表恐惧
# 每一次碰撞会使得相应的心态序号被添加至list中
# 然后用list来拟合正态分布曲线和绘制直方图
crashlist = []
file = open("C:\\Users\\user\\Desktop\\关键词四阶段TF处理.txt", mode='r', encoding='UTF-8')
document = file.readlines()
# print(document)
for item in document:
    itemlist = item.split("   ")
    frequency = int(itemlist[1])
    for key in dic.keys():
        if itemlist[0] in dic.get(key):
            crash(key, frequency, crashlist)
            break
# print(list)
x = np.array(crashlist)
# x = np.array(list)
# 这里填入数据list
# 如果已经是array格式就不用转化了
mu = np.mean(x)  # 计算均值
sigma = np.std(x)
num_bins = 30  # 直方图柱子的数量
n, bins, patches = plt.hist(x, num_bins, density=1, alpha=0.75)
# 直方图函数，x为x轴的值，normed=1表示为概率密度，即和为一，绿色方块，色深参数0.5.返回n个概率，直方块左边线的x值，及各个方块对象
y = norm.pdf(bins, mu, sigma)  # 拟合一条最佳正态分布曲线y

plt.grid(True)
plt.plot(bins, y, 'r--')  # 绘制y的曲线
plt.xlabel('mood')  # x轴代表心态
plt.ylabel('crash')  # y轴表示碰撞次数
plt.title('Histogram : $\mu$=' + str(round(mu, 2)) + ' $\sigma=$' + str(round(sigma, 2)))  # 中文标题 u'xxx'
# plt.subplots_adjust(left=0.15)#左边距
plt.show()
